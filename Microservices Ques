Milestones:
1. 12 Factors app
2. External configuration(config server)
3. Data Access(Spring-data-jpa)
4. Actuator
5. Security
6. Asynchronous messaging
7. Testcase
8. Service Broker
9. Transaction handling
10. Deployment
11. Logging
12. Manifest
13. Blue-green deployment
14. Auto-scaling
15. Service broker
16. Service discovery
17. Fault tolerance
18. Exception Handling

Spring boot:
1. Profiling
2. multiple datasources in a single microservice
3. Transaction handling in where multiple microservices are called in a same transaction.
4. How to trace the erroneous/faulty microservice in chained mircoservices.
5. Different microservice design patterns(SAGA,aggregator,API Gateway,Asynchronous messaging,Service Discovery)
6. Server side vs client side load balancing
7. Composite primary key in JPA
8. Exception propagation in REST
9. Exception handling in Spring Boot application
10. How to send request header through restTemplate
11. Validation in rest call(while sending wrong value as JSON)
12. What is an Idempotence and where it is used?
13. Where Do We Use WebMVC Test Annotation?
14. Host based routing VS Path based routing
15. Mapstruct, return a merged JSON which is a combination of multiple pojos
16. Difference between SpringbootApplication vs EnableAutoConfiguration : https://www.java67.com/2018/05/difference-between-springbootapplication-vs-EnableAutoConfiguration-annotations-Spring-Boot.html

Microservices concepts
1. How to manage zone wise timestamp displayed in UI and stored in DB
2. How to implement retry mechanism of failed messages in event based transaction handling

Infrastructure:
1. AWS-Kubernetes with HAProxy https://techbeacon.com/devops/one-year-using-kubernetes-production-lessons-learned
2. Kubernetes idea: https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/
3. Difference between AWS ECS and EKS: https://www.missioncloud.com/blog/amazon-ecs-vs-eks-which-service-is-right-for-you/
4. Run Spring boot application excluding embedded tomcat server, using jetty server
5. On-premise database with AWS infrastructure, service and routing is hosted on AWS cloud.
6. Import/migrate on-premise data to AWS
7. Throttling based on caller application, application based users and traffic limit.
8. Different ways to handle transaction on multiple microservices quering multiple database database
9. Implement auto-scaling and load-balancing in on-premise services
10. What are the difficulties if we deploy multiple containers in a single POD.
11. What happens if we deploy a new service into kubernetes with the same name as existing services
12. Monitoring kubernetes with prometheus
13. Load balance on-premise services with AWS 
14. Service deployed in AWS and using on-premise data sources, how to connect 
15. Implement quota in gateway on basis of user and traffic/second
16. If the size of resultset returned by the query is very huge, how to implement pagination or lazy loading using any cloud based database. 
17. How to use Spring cloud features in Kubernetes
18. How to use AWS cloudformation to automate CICD of Springboot service 
19. Use ribbon loadbalancer in kubernetes with Spring boot and justify why we need that as kubernetes is already provoding loadbalancing.
20. Implement CICD for a service running in private subnet in AWS, codebase from github,bitbucket.
21. How to make handshaking in zuul for HTTPS only traffic https://medium.com/@iroshan.du/ssl-configure-in-zuul-in-spring-boot-micro-services-for-localhost-3b933504277f

